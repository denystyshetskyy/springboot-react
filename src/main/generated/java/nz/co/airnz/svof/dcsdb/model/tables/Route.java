/*
 * This file is generated by jOOQ.
*/
package nz.co.airnz.svof.dcsdb.model.tables;


import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import nz.co.airnz.svof.dcsdb.model.Dcs;
import nz.co.airnz.svof.dcsdb.model.Keys;
import nz.co.airnz.svof.dcsdb.model.tables.records.RouteRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Route extends TableImpl<RouteRecord> {

    private static final long serialVersionUID = 2010770814;

    /**
     * The reference instance of <code>dcs.route</code>
     */
    public static final Route ROUTE = new Route();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RouteRecord> getRecordType() {
        return RouteRecord.class;
    }

    /**
     * The column <code>dcs.route.flight_id_composite</code>.
     */
    public final TableField<RouteRecord, String> FLIGHT_ID_COMPOSITE = createField("flight_id_composite", org.jooq.impl.SQLDataType.VARCHAR.length(21).nullable(false), this, "");

    /**
     * The column <code>dcs.route.airline_code</code>.
     */
    public final TableField<RouteRecord, String> AIRLINE_CODE = createField("airline_code", org.jooq.impl.SQLDataType.VARCHAR.length(3).nullable(false), this, "");

    /**
     * The column <code>dcs.route.flight_number</code>.
     */
    public final TableField<RouteRecord, String> FLIGHT_NUMBER = createField("flight_number", org.jooq.impl.SQLDataType.VARCHAR.length(4).nullable(false), this, "");

    /**
     * The column <code>dcs.route.flight_origin_date</code>. As per equivalent on Flight tble
     */
    public final TableField<RouteRecord, Date> FLIGHT_ORIGIN_DATE = createField("flight_origin_date", org.jooq.impl.SQLDataType.DATE.nullable(false), this, "As per equivalent on Flight tble");

    /**
     * The column <code>dcs.route.dcs_flight_version_num</code>.
     */
    public final TableField<RouteRecord, Integer> DCS_FLIGHT_VERSION_NUM = createField("dcs_flight_version_num", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>dcs.route.route_seq_no</code>. (blank)
     */
    public final TableField<RouteRecord, Integer> ROUTE_SEQ_NO = createField("route_seq_no", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "(blank)");

    /**
     * The column <code>dcs.route.airport_iata</code>. (blank)
     */
    public final TableField<RouteRecord, String> AIRPORT_IATA = createField("airport_iata", org.jooq.impl.SQLDataType.VARCHAR.length(3).nullable(false), this, "(blank)");

    /**
     * Create a <code>dcs.route</code> table reference
     */
    public Route() {
        this("route", null);
    }

    /**
     * Create an aliased <code>dcs.route</code> table reference
     */
    public Route(String alias) {
        this(alias, ROUTE);
    }

    private Route(String alias, Table<RouteRecord> aliased) {
        this(alias, aliased, null);
    }

    private Route(String alias, Table<RouteRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dcs.DCS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<RouteRecord> getPrimaryKey() {
        return Keys.PK_ROUTE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<RouteRecord>> getKeys() {
        return Arrays.<UniqueKey<RouteRecord>>asList(Keys.PK_ROUTE, Keys.BK_ROUTE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<RouteRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<RouteRecord, ?>>asList(Keys.ROUTE__FK_ROUTE_FLIGHT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Route as(String alias) {
        return new Route(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Route rename(String name) {
        return new Route(name, null);
    }
}
