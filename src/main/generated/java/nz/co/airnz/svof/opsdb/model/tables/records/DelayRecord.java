/*
 * This file is generated by jOOQ.
*/
package nz.co.airnz.svof.opsdb.model.tables.records;


import javax.annotation.Generated;

import nz.co.airnz.svof.opsdb.model.tables.Delay;

import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DelayRecord extends UpdatableRecordImpl<DelayRecord> implements Record8<Integer, Integer, Integer, String, String, Integer, String, String> {

    private static final long serialVersionUID = -1193354942;

    /**
     * Setter for <code>ops.delay.leg_no</code>.
     */
    public DelayRecord setLegNo(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>ops.delay.leg_no</code>.
     */
    public Integer getLegNo() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>ops.delay.update_key</code>.
     */
    public DelayRecord setUpdateKey(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>ops.delay.update_key</code>.
     */
    public Integer getUpdateKey() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>ops.delay.delay_sequence_number</code>. This sequence number reflects the sequence number of the delay code as provided in the Business Event Message published by Ops++ and will need to be generated by the ODS insert module. This sequence_number is used, in conjunction with the internal Ops++ primary keys of Leg No and Update Key, to create a primary key for all the Delay Codes provided in a message, given that there is currently no consistency in the supply of the Delay Code or the Sub Delay code.  The issue of which authoritative source table should be used for decoding these codes will be resolved at the time the code is decoded when inserted into the SVOF  
     */
    public DelayRecord setDelaySequenceNumber(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>ops.delay.delay_sequence_number</code>. This sequence number reflects the sequence number of the delay code as provided in the Business Event Message published by Ops++ and will need to be generated by the ODS insert module. This sequence_number is used, in conjunction with the internal Ops++ primary keys of Leg No and Update Key, to create a primary key for all the Delay Codes provided in a message, given that there is currently no consistency in the supply of the Delay Code or the Sub Delay code.  The issue of which authoritative source table should be used for decoding these codes will be resolved at the time the code is decoded when inserted into the SVOF  
     */
    public Integer getDelaySequenceNumber() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>ops.delay.delay_code</code>.
     */
    public DelayRecord setDelayCode(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>ops.delay.delay_code</code>.
     */
    public String getDelayCode() {
        return (String) get(3);
    }

    /**
     * Setter for <code>ops.delay.sub_delay_code</code>.
     */
    public DelayRecord setSubDelayCode(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>ops.delay.sub_delay_code</code>.
     */
    public String getSubDelayCode() {
        return (String) get(4);
    }

    /**
     * Setter for <code>ops.delay.delay_time</code>.
     */
    public DelayRecord setDelayTime(Integer value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>ops.delay.delay_time</code>.
     */
    public Integer getDelayTime() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>ops.delay.delay_imputation</code>.
     */
    public DelayRecord setDelayImputation(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>ops.delay.delay_imputation</code>.
     */
    public String getDelayImputation() {
        return (String) get(6);
    }

    /**
     * Setter for <code>ops.delay.delay_reason</code>.
     */
    public DelayRecord setDelayReason(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>ops.delay.delay_reason</code>.
     */
    public String getDelayReason() {
        return (String) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record3<Integer, Integer, Integer> key() {
        return (Record3) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<Integer, Integer, Integer, String, String, Integer, String, String> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<Integer, Integer, Integer, String, String, Integer, String, String> valuesRow() {
        return (Row8) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Delay.DELAY.LEG_NO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Delay.DELAY.UPDATE_KEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Delay.DELAY.DELAY_SEQUENCE_NUMBER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Delay.DELAY.DELAY_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Delay.DELAY.SUB_DELAY_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field6() {
        return Delay.DELAY.DELAY_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return Delay.DELAY.DELAY_IMPUTATION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return Delay.DELAY.DELAY_REASON;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getLegNo();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getUpdateKey();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getDelaySequenceNumber();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getDelayCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getSubDelayCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value6() {
        return getDelayTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getDelayImputation();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getDelayReason();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DelayRecord value1(Integer value) {
        setLegNo(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DelayRecord value2(Integer value) {
        setUpdateKey(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DelayRecord value3(Integer value) {
        setDelaySequenceNumber(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DelayRecord value4(String value) {
        setDelayCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DelayRecord value5(String value) {
        setSubDelayCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DelayRecord value6(Integer value) {
        setDelayTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DelayRecord value7(String value) {
        setDelayImputation(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DelayRecord value8(String value) {
        setDelayReason(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DelayRecord values(Integer value1, Integer value2, Integer value3, String value4, String value5, Integer value6, String value7, String value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DelayRecord
     */
    public DelayRecord() {
        super(Delay.DELAY);
    }

    /**
     * Create a detached, initialised DelayRecord
     */
    public DelayRecord(Integer legNo, Integer updateKey, Integer delaySequenceNumber, String delayCode, String subDelayCode, Integer delayTime, String delayImputation, String delayReason) {
        super(Delay.DELAY);

        set(0, legNo);
        set(1, updateKey);
        set(2, delaySequenceNumber);
        set(3, delayCode);
        set(4, subDelayCode);
        set(5, delayTime);
        set(6, delayImputation);
        set(7, delayReason);
    }
}
