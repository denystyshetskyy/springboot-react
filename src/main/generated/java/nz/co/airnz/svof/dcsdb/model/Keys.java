/*
 * This file is generated by jOOQ.
*/
package nz.co.airnz.svof.dcsdb.model;


import javax.annotation.Generated;

import nz.co.airnz.svof.dcsdb.model.tables.Cabin;
import nz.co.airnz.svof.dcsdb.model.tables.Flight;
import nz.co.airnz.svof.dcsdb.model.tables.Leg;
import nz.co.airnz.svof.dcsdb.model.tables.Route;
import nz.co.airnz.svof.dcsdb.model.tables.records.CabinRecord;
import nz.co.airnz.svof.dcsdb.model.tables.records.FlightRecord;
import nz.co.airnz.svof.dcsdb.model.tables.records.LegRecord;
import nz.co.airnz.svof.dcsdb.model.tables.records.RouteRecord;

import org.jooq.ForeignKey;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;


/**
 * A class modelling foreign key relationships between tables of the <code>dcs</code> 
 * schema
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<CabinRecord> PK_CABIN = UniqueKeys0.PK_CABIN;
    public static final UniqueKey<CabinRecord> BK_CABIN = UniqueKeys0.BK_CABIN;
    public static final UniqueKey<FlightRecord> PK_FLIGHT_ID = UniqueKeys0.PK_FLIGHT_ID;
    public static final UniqueKey<FlightRecord> BK_FLIGHT_ID = UniqueKeys0.BK_FLIGHT_ID;
    public static final UniqueKey<LegRecord> PK_FLIGHT_LEG_ID = UniqueKeys0.PK_FLIGHT_LEG_ID;
    public static final UniqueKey<LegRecord> BK_FLIGHT_LEG_ID = UniqueKeys0.BK_FLIGHT_LEG_ID;
    public static final UniqueKey<RouteRecord> PK_ROUTE = UniqueKeys0.PK_ROUTE;
    public static final UniqueKey<RouteRecord> BK_ROUTE = UniqueKeys0.BK_ROUTE;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<CabinRecord, LegRecord> CABIN__FK_CABIN_LEG = ForeignKeys0.CABIN__FK_CABIN_LEG;
    public static final ForeignKey<LegRecord, FlightRecord> LEG__FK_LEG_FLIGHT = ForeignKeys0.LEG__FK_LEG_FLIGHT;
    public static final ForeignKey<RouteRecord, FlightRecord> ROUTE__FK_ROUTE_FLIGHT = ForeignKeys0.ROUTE__FK_ROUTE_FLIGHT;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class UniqueKeys0 extends AbstractKeys {
        public static final UniqueKey<CabinRecord> PK_CABIN = createUniqueKey(Cabin.CABIN, "pk_cabin", Cabin.CABIN.FLIGHT_ID_COMPOSITE);
        public static final UniqueKey<CabinRecord> BK_CABIN = createUniqueKey(Cabin.CABIN, "bk_cabin", Cabin.CABIN.AIRLINE_CODE, Cabin.CABIN.FLIGHT_NUMBER, Cabin.CABIN.FLIGHT_ORIGIN_DATE, Cabin.CABIN.DCS_FLIGHT_VERSION_NUM);
        public static final UniqueKey<FlightRecord> PK_FLIGHT_ID = createUniqueKey(Flight.FLIGHT, "pk_flight_id", Flight.FLIGHT.FLIGHT_ID_COMPOSITE);
        public static final UniqueKey<FlightRecord> BK_FLIGHT_ID = createUniqueKey(Flight.FLIGHT, "bk_flight_id", Flight.FLIGHT.AIRLINE_CODE, Flight.FLIGHT.FLIGHT_NUMBER, Flight.FLIGHT.FLIGHT_ORIGIN_DATE, Flight.FLIGHT.DCS_FLIGHT_VERSION_NUM);
        public static final UniqueKey<LegRecord> PK_FLIGHT_LEG_ID = createUniqueKey(Leg.LEG, "pk_flight_leg_id", Leg.LEG.FLIGHT_ID_COMPOSITE, Leg.LEG.DEPART_AIRPORT_IATA);
        public static final UniqueKey<LegRecord> BK_FLIGHT_LEG_ID = createUniqueKey(Leg.LEG, "bk_flight_leg_id", Leg.LEG.AIRLINE_CODE, Leg.LEG.FLIGHT_NUMBER, Leg.LEG.FLIGHT_ORIGIN_DATE, Leg.LEG.DEPART_AIRPORT_IATA, Leg.LEG.DCS_FLIGHT_VERSION_NUM);
        public static final UniqueKey<RouteRecord> PK_ROUTE = createUniqueKey(Route.ROUTE, "pk_route", Route.ROUTE.ROUTE_SEQ_NO, Route.ROUTE.FLIGHT_ID_COMPOSITE);
        public static final UniqueKey<RouteRecord> BK_ROUTE = createUniqueKey(Route.ROUTE, "bk_route", Route.ROUTE.AIRLINE_CODE, Route.ROUTE.FLIGHT_NUMBER, Route.ROUTE.FLIGHT_ORIGIN_DATE, Route.ROUTE.DCS_FLIGHT_VERSION_NUM, Route.ROUTE.ROUTE_SEQ_NO);
    }

    private static class ForeignKeys0 extends AbstractKeys {
        public static final ForeignKey<CabinRecord, LegRecord> CABIN__FK_CABIN_LEG = createForeignKey(nz.co.airnz.svof.dcsdb.model.Keys.PK_FLIGHT_LEG_ID, Cabin.CABIN, "cabin__fk_cabin_leg", Cabin.CABIN.FLIGHT_ID_COMPOSITE, Cabin.CABIN.DEPART_AIRPORT_IATA);
        public static final ForeignKey<LegRecord, FlightRecord> LEG__FK_LEG_FLIGHT = createForeignKey(nz.co.airnz.svof.dcsdb.model.Keys.PK_FLIGHT_ID, Leg.LEG, "leg__fk_leg_flight", Leg.LEG.FLIGHT_ID_COMPOSITE);
        public static final ForeignKey<RouteRecord, FlightRecord> ROUTE__FK_ROUTE_FLIGHT = createForeignKey(nz.co.airnz.svof.dcsdb.model.Keys.PK_FLIGHT_ID, Route.ROUTE, "route__fk_route_flight", Route.ROUTE.FLIGHT_ID_COMPOSITE);
    }
}
