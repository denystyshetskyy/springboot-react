/*
 * This file is generated by jOOQ.
*/
package nz.co.airnz.svof.dcsdb.model.tables.records;


import java.sql.Date;

import javax.annotation.Generated;

import nz.co.airnz.svof.dcsdb.model.tables.Route;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RouteRecord extends UpdatableRecordImpl<RouteRecord> implements Record7<String, String, String, Date, Integer, Integer, String> {

    private static final long serialVersionUID = 150708576;

    /**
     * Setter for <code>dcs.route.flight_id_composite</code>.
     */
    public RouteRecord setFlightIdComposite(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>dcs.route.flight_id_composite</code>.
     */
    public String getFlightIdComposite() {
        return (String) get(0);
    }

    /**
     * Setter for <code>dcs.route.airline_code</code>.
     */
    public RouteRecord setAirlineCode(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>dcs.route.airline_code</code>.
     */
    public String getAirlineCode() {
        return (String) get(1);
    }

    /**
     * Setter for <code>dcs.route.flight_number</code>.
     */
    public RouteRecord setFlightNumber(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>dcs.route.flight_number</code>.
     */
    public String getFlightNumber() {
        return (String) get(2);
    }

    /**
     * Setter for <code>dcs.route.flight_origin_date</code>. As per equivalent on Flight tble
     */
    public RouteRecord setFlightOriginDate(Date value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>dcs.route.flight_origin_date</code>. As per equivalent on Flight tble
     */
    public Date getFlightOriginDate() {
        return (Date) get(3);
    }

    /**
     * Setter for <code>dcs.route.dcs_flight_version_num</code>.
     */
    public RouteRecord setDcsFlightVersionNum(Integer value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>dcs.route.dcs_flight_version_num</code>.
     */
    public Integer getDcsFlightVersionNum() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>dcs.route.route_seq_no</code>. (blank)
     */
    public RouteRecord setRouteSeqNo(Integer value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>dcs.route.route_seq_no</code>. (blank)
     */
    public Integer getRouteSeqNo() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>dcs.route.airport_iata</code>. (blank)
     */
    public RouteRecord setAirportIata(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>dcs.route.airport_iata</code>. (blank)
     */
    public String getAirportIata() {
        return (String) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record2<Integer, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<String, String, String, Date, Integer, Integer, String> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<String, String, String, Date, Integer, Integer, String> valuesRow() {
        return (Row7) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return Route.ROUTE.FLIGHT_ID_COMPOSITE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Route.ROUTE.AIRLINE_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Route.ROUTE.FLIGHT_NUMBER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Date> field4() {
        return Route.ROUTE.FLIGHT_ORIGIN_DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field5() {
        return Route.ROUTE.DCS_FLIGHT_VERSION_NUM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field6() {
        return Route.ROUTE.ROUTE_SEQ_NO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return Route.ROUTE.AIRPORT_IATA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getFlightIdComposite();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getAirlineCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getFlightNumber();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date value4() {
        return getFlightOriginDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value5() {
        return getDcsFlightVersionNum();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value6() {
        return getRouteSeqNo();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getAirportIata();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RouteRecord value1(String value) {
        setFlightIdComposite(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RouteRecord value2(String value) {
        setAirlineCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RouteRecord value3(String value) {
        setFlightNumber(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RouteRecord value4(Date value) {
        setFlightOriginDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RouteRecord value5(Integer value) {
        setDcsFlightVersionNum(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RouteRecord value6(Integer value) {
        setRouteSeqNo(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RouteRecord value7(String value) {
        setAirportIata(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RouteRecord values(String value1, String value2, String value3, Date value4, Integer value5, Integer value6, String value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RouteRecord
     */
    public RouteRecord() {
        super(Route.ROUTE);
    }

    /**
     * Create a detached, initialised RouteRecord
     */
    public RouteRecord(String flightIdComposite, String airlineCode, String flightNumber, Date flightOriginDate, Integer dcsFlightVersionNum, Integer routeSeqNo, String airportIata) {
        super(Route.ROUTE);

        set(0, flightIdComposite);
        set(1, airlineCode);
        set(2, flightNumber);
        set(3, flightOriginDate);
        set(4, dcsFlightVersionNum);
        set(5, routeSeqNo);
        set(6, airportIata);
    }
}
