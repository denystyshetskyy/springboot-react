/*
 * This file is generated by jOOQ.
*/
package nz.co.airnz.svof.dcsdb.model;


import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import nz.co.airnz.svof.dcsdb.model.tables.Cabin;
import nz.co.airnz.svof.dcsdb.model.tables.Flight;
import nz.co.airnz.svof.dcsdb.model.tables.Leg;
import nz.co.airnz.svof.dcsdb.model.tables.Route;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Dcs extends SchemaImpl {

    private static final long serialVersionUID = 1210660379;

    /**
     * The reference instance of <code>dcs</code>
     */
    public static final Dcs DCS = new Dcs();

    /**
     * The table <code>dcs.cabin</code>.
     */
    public final Cabin CABIN = nz.co.airnz.svof.dcsdb.model.tables.Cabin.CABIN;

    /**
     * The table <code>dcs.flight</code>.
     */
    public final Flight FLIGHT = nz.co.airnz.svof.dcsdb.model.tables.Flight.FLIGHT;

    /**
     * The table <code>dcs.leg</code>.
     */
    public final Leg LEG = nz.co.airnz.svof.dcsdb.model.tables.Leg.LEG;

    /**
     * The table <code>dcs.route</code>.
     */
    public final Route ROUTE = nz.co.airnz.svof.dcsdb.model.tables.Route.ROUTE;

    /**
     * No further instances allowed
     */
    private Dcs() {
        super("dcs", null);
    }


    /**
     * {@inheritDoc}
     */
    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
            Cabin.CABIN,
            Flight.FLIGHT,
            Leg.LEG,
            Route.ROUTE);
    }
}
