/*
 * This file is generated by jOOQ.
*/
package nz.co.airnz.svof.dcsdb.model.tables;


import java.sql.Date;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import nz.co.airnz.svof.dcsdb.model.Dcs;
import nz.co.airnz.svof.dcsdb.model.Keys;
import nz.co.airnz.svof.dcsdb.model.tables.records.FlightRecord;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Flight extends TableImpl<FlightRecord> {

    private static final long serialVersionUID = 1062416093;

    /**
     * The reference instance of <code>dcs.flight</code>
     */
    public static final Flight FLIGHT = new Flight();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<FlightRecord> getRecordType() {
        return FlightRecord.class;
    }

    /**
     * The column <code>dcs.flight.flight_id_composite</code>. This composite key is made up of the attributes of the full business key and is used as the primary key for the flight instance within the DCS ODS. This is because the DCS system does not have its own unique internal key. The composite is used to minimize the performance impact of using multiple individual attributes to form the primary key. The attributes used are AirlineCode (3 characters), FlightNumber (4 characters), FlightOrigin_date (10 characters as yyyy-mm-dd) and DCSFlightVersionNumber (4 characters).  This last attribute is sent through as an integer but must be cast as leading zeroes when inserted into this concatenate key
     */
    public final TableField<FlightRecord, String> FLIGHT_ID_COMPOSITE = createField("flight_id_composite", org.jooq.impl.SQLDataType.VARCHAR.length(21).nullable(false), this, "This composite key is made up of the attributes of the full business key and is used as the primary key for the flight instance within the DCS ODS. This is because the DCS system does not have its own unique internal key. The composite is used to minimize the performance impact of using multiple individual attributes to form the primary key. The attributes used are AirlineCode (3 characters), FlightNumber (4 characters), FlightOrigin_date (10 characters as yyyy-mm-dd) and DCSFlightVersionNumber (4 characters).  This last attribute is sent through as an integer but must be cast as leading zeroes when inserted into this concatenate key");

    /**
     * The column <code>dcs.flight.airline_code</code>. 2 or 3 character codes assigned by the International Air Transport Association (IATA) to the world's airlines.
     */
    public final TableField<FlightRecord, String> AIRLINE_CODE = createField("airline_code", org.jooq.impl.SQLDataType.VARCHAR.length(3).nullable(false), this, "2 or 3 character codes assigned by the International Air Transport Association (IATA) to the world's airlines.");

    /**
     * The column <code>dcs.flight.flight_number</code>. A flight number, when combined with the name of the airline (or its Airline Code)  and the date, identifies a particular flight.
     */
    public final TableField<FlightRecord, String> FLIGHT_NUMBER = createField("flight_number", org.jooq.impl.SQLDataType.VARCHAR.length(4).nullable(false), this, "A flight number, when combined with the name of the airline (or its Airline Code)  and the date, identifies a particular flight.");

    /**
     * The column <code>dcs.flight.flight_origin_date</code>. A flight's local date of departure from an airport. Sample value and format "2017-07-25"
     */
    public final TableField<FlightRecord, Date> FLIGHT_ORIGIN_DATE = createField("flight_origin_date", org.jooq.impl.SQLDataType.DATE.nullable(false), this, "A flight's local date of departure from an airport. Sample value and format \"2017-07-25\"");

    /**
     * The column <code>dcs.flight.dcs_flight_version_num</code>. Unique number to identify a publish message from DCS to SVOF.
     */
    public final TableField<FlightRecord, Integer> DCS_FLIGHT_VERSION_NUM = createField("dcs_flight_version_num", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "Unique number to identify a publish message from DCS to SVOF.");

    /**
     * The column <code>dcs.flight.airport_from</code>. Flight departs from this airport.
     */
    public final TableField<FlightRecord, String> AIRPORT_FROM = createField("airport_from", org.jooq.impl.SQLDataType.VARCHAR.length(3).nullable(false), this, "Flight departs from this airport.");

    /**
     * The column <code>dcs.flight.airport_to</code>. Flight arrives into this airport.
     */
    public final TableField<FlightRecord, String> AIRPORT_TO = createField("airport_to", org.jooq.impl.SQLDataType.VARCHAR.length(3).nullable(false), this, "Flight arrives into this airport.");

    /**
     * The column <code>dcs.flight.international_domestic</code>. Indicates whether the Flight is International or Domestic
     */
    public final TableField<FlightRecord, String> INTERNATIONAL_DOMESTIC = createField("international_domestic", org.jooq.impl.SQLDataType.VARCHAR.length(1), this, "Indicates whether the Flight is International or Domestic");

    /**
     * The column <code>dcs.flight.business_event_type</code>.
     */
    public final TableField<FlightRecord, String> BUSINESS_EVENT_TYPE = createField("business_event_type", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

    /**
     * The column <code>dcs.flight.business_event_category</code>.
     */
    public final TableField<FlightRecord, String> BUSINESS_EVENT_CATEGORY = createField("business_event_category", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

    /**
     * The column <code>dcs.flight.business_event_leg_state</code>.
     */
    public final TableField<FlightRecord, String> BUSINESS_EVENT_LEG_STATE = createField("business_event_leg_state", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

    /**
     * The column <code>dcs.flight.business_event_message_time</code>.
     */
    public final TableField<FlightRecord, Timestamp> BUSINESS_EVENT_MESSAGE_TIME = createField("business_event_message_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>dcs.flight.business_event_time</code>.
     */
    public final TableField<FlightRecord, Timestamp> BUSINESS_EVENT_TIME = createField("business_event_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * Create a <code>dcs.flight</code> table reference
     */
    public Flight() {
        this("flight", null);
    }

    /**
     * Create an aliased <code>dcs.flight</code> table reference
     */
    public Flight(String alias) {
        this(alias, FLIGHT);
    }

    private Flight(String alias, Table<FlightRecord> aliased) {
        this(alias, aliased, null);
    }

    private Flight(String alias, Table<FlightRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dcs.DCS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<FlightRecord> getPrimaryKey() {
        return Keys.PK_FLIGHT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<FlightRecord>> getKeys() {
        return Arrays.<UniqueKey<FlightRecord>>asList(Keys.PK_FLIGHT_ID, Keys.BK_FLIGHT_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Flight as(String alias) {
        return new Flight(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Flight rename(String name) {
        return new Flight(name, null);
    }
}
