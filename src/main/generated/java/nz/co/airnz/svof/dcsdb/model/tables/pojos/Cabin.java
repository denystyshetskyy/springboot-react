/*
 * This file is generated by jOOQ.
*/
package nz.co.airnz.svof.dcsdb.model.tables.pojos;


import java.io.Serializable;
import java.sql.Date;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Cabin implements Serializable {

    private static final long serialVersionUID = 1438925954;

    private String  flightIdComposite;
    private String  airlineCode;
    private String  flightNumber;
    private Date    flightOriginDate;
    private Integer dcsFlightVersionNum;
    private String  classCharacter;
    private Integer legSeqNum;
    private Integer seatsConfiguration;
    private Integer saleableSeatConfiguration;
    private Integer totalPassengersBooked;
    private Integer totalAdultsAccepted;
    private Integer totalSportspersonsAccepted;
    private Integer totalChildrenAccepted;
    private Integer totalInfantsAccepted;
    private Integer childWeightConstant;
    private Integer numOfChildren;
    private Integer numOfInfants;
    private Integer numOfSportsPersons;
    private Integer numOfSubloadStaff;
    private Integer sprtsPersnWeightCnstnt;
    private Integer totalBaggagePieces;
    private Integer totalBaggageWeight;
    private Integer numOfLevel_7Pax;
    private Integer numOfLevel_7aPax;
    private Integer totalPaxFinalSales;
    private String  departAirportIata;

    public Cabin() {}

    public Cabin(Cabin value) {
        this.flightIdComposite = value.flightIdComposite;
        this.airlineCode = value.airlineCode;
        this.flightNumber = value.flightNumber;
        this.flightOriginDate = value.flightOriginDate;
        this.dcsFlightVersionNum = value.dcsFlightVersionNum;
        this.classCharacter = value.classCharacter;
        this.legSeqNum = value.legSeqNum;
        this.seatsConfiguration = value.seatsConfiguration;
        this.saleableSeatConfiguration = value.saleableSeatConfiguration;
        this.totalPassengersBooked = value.totalPassengersBooked;
        this.totalAdultsAccepted = value.totalAdultsAccepted;
        this.totalSportspersonsAccepted = value.totalSportspersonsAccepted;
        this.totalChildrenAccepted = value.totalChildrenAccepted;
        this.totalInfantsAccepted = value.totalInfantsAccepted;
        this.childWeightConstant = value.childWeightConstant;
        this.numOfChildren = value.numOfChildren;
        this.numOfInfants = value.numOfInfants;
        this.numOfSportsPersons = value.numOfSportsPersons;
        this.numOfSubloadStaff = value.numOfSubloadStaff;
        this.sprtsPersnWeightCnstnt = value.sprtsPersnWeightCnstnt;
        this.totalBaggagePieces = value.totalBaggagePieces;
        this.totalBaggageWeight = value.totalBaggageWeight;
        this.numOfLevel_7Pax = value.numOfLevel_7Pax;
        this.numOfLevel_7aPax = value.numOfLevel_7aPax;
        this.totalPaxFinalSales = value.totalPaxFinalSales;
        this.departAirportIata = value.departAirportIata;
    }

    public Cabin(
        String  flightIdComposite,
        String  airlineCode,
        String  flightNumber,
        Date    flightOriginDate,
        Integer dcsFlightVersionNum,
        String  classCharacter,
        Integer legSeqNum,
        Integer seatsConfiguration,
        Integer saleableSeatConfiguration,
        Integer totalPassengersBooked,
        Integer totalAdultsAccepted,
        Integer totalSportspersonsAccepted,
        Integer totalChildrenAccepted,
        Integer totalInfantsAccepted,
        Integer childWeightConstant,
        Integer numOfChildren,
        Integer numOfInfants,
        Integer numOfSportsPersons,
        Integer numOfSubloadStaff,
        Integer sprtsPersnWeightCnstnt,
        Integer totalBaggagePieces,
        Integer totalBaggageWeight,
        Integer numOfLevel_7Pax,
        Integer numOfLevel_7aPax,
        Integer totalPaxFinalSales,
        String  departAirportIata
    ) {
        this.flightIdComposite = flightIdComposite;
        this.airlineCode = airlineCode;
        this.flightNumber = flightNumber;
        this.flightOriginDate = flightOriginDate;
        this.dcsFlightVersionNum = dcsFlightVersionNum;
        this.classCharacter = classCharacter;
        this.legSeqNum = legSeqNum;
        this.seatsConfiguration = seatsConfiguration;
        this.saleableSeatConfiguration = saleableSeatConfiguration;
        this.totalPassengersBooked = totalPassengersBooked;
        this.totalAdultsAccepted = totalAdultsAccepted;
        this.totalSportspersonsAccepted = totalSportspersonsAccepted;
        this.totalChildrenAccepted = totalChildrenAccepted;
        this.totalInfantsAccepted = totalInfantsAccepted;
        this.childWeightConstant = childWeightConstant;
        this.numOfChildren = numOfChildren;
        this.numOfInfants = numOfInfants;
        this.numOfSportsPersons = numOfSportsPersons;
        this.numOfSubloadStaff = numOfSubloadStaff;
        this.sprtsPersnWeightCnstnt = sprtsPersnWeightCnstnt;
        this.totalBaggagePieces = totalBaggagePieces;
        this.totalBaggageWeight = totalBaggageWeight;
        this.numOfLevel_7Pax = numOfLevel_7Pax;
        this.numOfLevel_7aPax = numOfLevel_7aPax;
        this.totalPaxFinalSales = totalPaxFinalSales;
        this.departAirportIata = departAirportIata;
    }

    public String getFlightIdComposite() {
        return this.flightIdComposite;
    }

    public Cabin setFlightIdComposite(String flightIdComposite) {
        this.flightIdComposite = flightIdComposite;
        return this;
    }

    public String getAirlineCode() {
        return this.airlineCode;
    }

    public Cabin setAirlineCode(String airlineCode) {
        this.airlineCode = airlineCode;
        return this;
    }

    public String getFlightNumber() {
        return this.flightNumber;
    }

    public Cabin setFlightNumber(String flightNumber) {
        this.flightNumber = flightNumber;
        return this;
    }

    public Date getFlightOriginDate() {
        return this.flightOriginDate;
    }

    public Cabin setFlightOriginDate(Date flightOriginDate) {
        this.flightOriginDate = flightOriginDate;
        return this;
    }

    public Integer getDcsFlightVersionNum() {
        return this.dcsFlightVersionNum;
    }

    public Cabin setDcsFlightVersionNum(Integer dcsFlightVersionNum) {
        this.dcsFlightVersionNum = dcsFlightVersionNum;
        return this;
    }

    public String getClassCharacter() {
        return this.classCharacter;
    }

    public Cabin setClassCharacter(String classCharacter) {
        this.classCharacter = classCharacter;
        return this;
    }

    public Integer getLegSeqNum() {
        return this.legSeqNum;
    }

    public Cabin setLegSeqNum(Integer legSeqNum) {
        this.legSeqNum = legSeqNum;
        return this;
    }

    public Integer getSeatsConfiguration() {
        return this.seatsConfiguration;
    }

    public Cabin setSeatsConfiguration(Integer seatsConfiguration) {
        this.seatsConfiguration = seatsConfiguration;
        return this;
    }

    public Integer getSaleableSeatConfiguration() {
        return this.saleableSeatConfiguration;
    }

    public Cabin setSaleableSeatConfiguration(Integer saleableSeatConfiguration) {
        this.saleableSeatConfiguration = saleableSeatConfiguration;
        return this;
    }

    public Integer getTotalPassengersBooked() {
        return this.totalPassengersBooked;
    }

    public Cabin setTotalPassengersBooked(Integer totalPassengersBooked) {
        this.totalPassengersBooked = totalPassengersBooked;
        return this;
    }

    public Integer getTotalAdultsAccepted() {
        return this.totalAdultsAccepted;
    }

    public Cabin setTotalAdultsAccepted(Integer totalAdultsAccepted) {
        this.totalAdultsAccepted = totalAdultsAccepted;
        return this;
    }

    public Integer getTotalSportspersonsAccepted() {
        return this.totalSportspersonsAccepted;
    }

    public Cabin setTotalSportspersonsAccepted(Integer totalSportspersonsAccepted) {
        this.totalSportspersonsAccepted = totalSportspersonsAccepted;
        return this;
    }

    public Integer getTotalChildrenAccepted() {
        return this.totalChildrenAccepted;
    }

    public Cabin setTotalChildrenAccepted(Integer totalChildrenAccepted) {
        this.totalChildrenAccepted = totalChildrenAccepted;
        return this;
    }

    public Integer getTotalInfantsAccepted() {
        return this.totalInfantsAccepted;
    }

    public Cabin setTotalInfantsAccepted(Integer totalInfantsAccepted) {
        this.totalInfantsAccepted = totalInfantsAccepted;
        return this;
    }

    public Integer getChildWeightConstant() {
        return this.childWeightConstant;
    }

    public Cabin setChildWeightConstant(Integer childWeightConstant) {
        this.childWeightConstant = childWeightConstant;
        return this;
    }

    public Integer getNumOfChildren() {
        return this.numOfChildren;
    }

    public Cabin setNumOfChildren(Integer numOfChildren) {
        this.numOfChildren = numOfChildren;
        return this;
    }

    public Integer getNumOfInfants() {
        return this.numOfInfants;
    }

    public Cabin setNumOfInfants(Integer numOfInfants) {
        this.numOfInfants = numOfInfants;
        return this;
    }

    public Integer getNumOfSportsPersons() {
        return this.numOfSportsPersons;
    }

    public Cabin setNumOfSportsPersons(Integer numOfSportsPersons) {
        this.numOfSportsPersons = numOfSportsPersons;
        return this;
    }

    public Integer getNumOfSubloadStaff() {
        return this.numOfSubloadStaff;
    }

    public Cabin setNumOfSubloadStaff(Integer numOfSubloadStaff) {
        this.numOfSubloadStaff = numOfSubloadStaff;
        return this;
    }

    public Integer getSprtsPersnWeightCnstnt() {
        return this.sprtsPersnWeightCnstnt;
    }

    public Cabin setSprtsPersnWeightCnstnt(Integer sprtsPersnWeightCnstnt) {
        this.sprtsPersnWeightCnstnt = sprtsPersnWeightCnstnt;
        return this;
    }

    public Integer getTotalBaggagePieces() {
        return this.totalBaggagePieces;
    }

    public Cabin setTotalBaggagePieces(Integer totalBaggagePieces) {
        this.totalBaggagePieces = totalBaggagePieces;
        return this;
    }

    public Integer getTotalBaggageWeight() {
        return this.totalBaggageWeight;
    }

    public Cabin setTotalBaggageWeight(Integer totalBaggageWeight) {
        this.totalBaggageWeight = totalBaggageWeight;
        return this;
    }

    public Integer getNumOfLevel_7Pax() {
        return this.numOfLevel_7Pax;
    }

    public Cabin setNumOfLevel_7Pax(Integer numOfLevel_7Pax) {
        this.numOfLevel_7Pax = numOfLevel_7Pax;
        return this;
    }

    public Integer getNumOfLevel_7aPax() {
        return this.numOfLevel_7aPax;
    }

    public Cabin setNumOfLevel_7aPax(Integer numOfLevel_7aPax) {
        this.numOfLevel_7aPax = numOfLevel_7aPax;
        return this;
    }

    public Integer getTotalPaxFinalSales() {
        return this.totalPaxFinalSales;
    }

    public Cabin setTotalPaxFinalSales(Integer totalPaxFinalSales) {
        this.totalPaxFinalSales = totalPaxFinalSales;
        return this;
    }

    public String getDepartAirportIata() {
        return this.departAirportIata;
    }

    public Cabin setDepartAirportIata(String departAirportIata) {
        this.departAirportIata = departAirportIata;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Cabin other = (Cabin) obj;
        if (flightIdComposite == null) {
            if (other.flightIdComposite != null)
                return false;
        }
        else if (!flightIdComposite.equals(other.flightIdComposite))
            return false;
        if (airlineCode == null) {
            if (other.airlineCode != null)
                return false;
        }
        else if (!airlineCode.equals(other.airlineCode))
            return false;
        if (flightNumber == null) {
            if (other.flightNumber != null)
                return false;
        }
        else if (!flightNumber.equals(other.flightNumber))
            return false;
        if (flightOriginDate == null) {
            if (other.flightOriginDate != null)
                return false;
        }
        else if (!flightOriginDate.equals(other.flightOriginDate))
            return false;
        if (dcsFlightVersionNum == null) {
            if (other.dcsFlightVersionNum != null)
                return false;
        }
        else if (!dcsFlightVersionNum.equals(other.dcsFlightVersionNum))
            return false;
        if (classCharacter == null) {
            if (other.classCharacter != null)
                return false;
        }
        else if (!classCharacter.equals(other.classCharacter))
            return false;
        if (legSeqNum == null) {
            if (other.legSeqNum != null)
                return false;
        }
        else if (!legSeqNum.equals(other.legSeqNum))
            return false;
        if (seatsConfiguration == null) {
            if (other.seatsConfiguration != null)
                return false;
        }
        else if (!seatsConfiguration.equals(other.seatsConfiguration))
            return false;
        if (saleableSeatConfiguration == null) {
            if (other.saleableSeatConfiguration != null)
                return false;
        }
        else if (!saleableSeatConfiguration.equals(other.saleableSeatConfiguration))
            return false;
        if (totalPassengersBooked == null) {
            if (other.totalPassengersBooked != null)
                return false;
        }
        else if (!totalPassengersBooked.equals(other.totalPassengersBooked))
            return false;
        if (totalAdultsAccepted == null) {
            if (other.totalAdultsAccepted != null)
                return false;
        }
        else if (!totalAdultsAccepted.equals(other.totalAdultsAccepted))
            return false;
        if (totalSportspersonsAccepted == null) {
            if (other.totalSportspersonsAccepted != null)
                return false;
        }
        else if (!totalSportspersonsAccepted.equals(other.totalSportspersonsAccepted))
            return false;
        if (totalChildrenAccepted == null) {
            if (other.totalChildrenAccepted != null)
                return false;
        }
        else if (!totalChildrenAccepted.equals(other.totalChildrenAccepted))
            return false;
        if (totalInfantsAccepted == null) {
            if (other.totalInfantsAccepted != null)
                return false;
        }
        else if (!totalInfantsAccepted.equals(other.totalInfantsAccepted))
            return false;
        if (childWeightConstant == null) {
            if (other.childWeightConstant != null)
                return false;
        }
        else if (!childWeightConstant.equals(other.childWeightConstant))
            return false;
        if (numOfChildren == null) {
            if (other.numOfChildren != null)
                return false;
        }
        else if (!numOfChildren.equals(other.numOfChildren))
            return false;
        if (numOfInfants == null) {
            if (other.numOfInfants != null)
                return false;
        }
        else if (!numOfInfants.equals(other.numOfInfants))
            return false;
        if (numOfSportsPersons == null) {
            if (other.numOfSportsPersons != null)
                return false;
        }
        else if (!numOfSportsPersons.equals(other.numOfSportsPersons))
            return false;
        if (numOfSubloadStaff == null) {
            if (other.numOfSubloadStaff != null)
                return false;
        }
        else if (!numOfSubloadStaff.equals(other.numOfSubloadStaff))
            return false;
        if (sprtsPersnWeightCnstnt == null) {
            if (other.sprtsPersnWeightCnstnt != null)
                return false;
        }
        else if (!sprtsPersnWeightCnstnt.equals(other.sprtsPersnWeightCnstnt))
            return false;
        if (totalBaggagePieces == null) {
            if (other.totalBaggagePieces != null)
                return false;
        }
        else if (!totalBaggagePieces.equals(other.totalBaggagePieces))
            return false;
        if (totalBaggageWeight == null) {
            if (other.totalBaggageWeight != null)
                return false;
        }
        else if (!totalBaggageWeight.equals(other.totalBaggageWeight))
            return false;
        if (numOfLevel_7Pax == null) {
            if (other.numOfLevel_7Pax != null)
                return false;
        }
        else if (!numOfLevel_7Pax.equals(other.numOfLevel_7Pax))
            return false;
        if (numOfLevel_7aPax == null) {
            if (other.numOfLevel_7aPax != null)
                return false;
        }
        else if (!numOfLevel_7aPax.equals(other.numOfLevel_7aPax))
            return false;
        if (totalPaxFinalSales == null) {
            if (other.totalPaxFinalSales != null)
                return false;
        }
        else if (!totalPaxFinalSales.equals(other.totalPaxFinalSales))
            return false;
        if (departAirportIata == null) {
            if (other.departAirportIata != null)
                return false;
        }
        else if (!departAirportIata.equals(other.departAirportIata))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.flightIdComposite == null) ? 0 : this.flightIdComposite.hashCode());
        result = prime * result + ((this.airlineCode == null) ? 0 : this.airlineCode.hashCode());
        result = prime * result + ((this.flightNumber == null) ? 0 : this.flightNumber.hashCode());
        result = prime * result + ((this.flightOriginDate == null) ? 0 : this.flightOriginDate.hashCode());
        result = prime * result + ((this.dcsFlightVersionNum == null) ? 0 : this.dcsFlightVersionNum.hashCode());
        result = prime * result + ((this.classCharacter == null) ? 0 : this.classCharacter.hashCode());
        result = prime * result + ((this.legSeqNum == null) ? 0 : this.legSeqNum.hashCode());
        result = prime * result + ((this.seatsConfiguration == null) ? 0 : this.seatsConfiguration.hashCode());
        result = prime * result + ((this.saleableSeatConfiguration == null) ? 0 : this.saleableSeatConfiguration.hashCode());
        result = prime * result + ((this.totalPassengersBooked == null) ? 0 : this.totalPassengersBooked.hashCode());
        result = prime * result + ((this.totalAdultsAccepted == null) ? 0 : this.totalAdultsAccepted.hashCode());
        result = prime * result + ((this.totalSportspersonsAccepted == null) ? 0 : this.totalSportspersonsAccepted.hashCode());
        result = prime * result + ((this.totalChildrenAccepted == null) ? 0 : this.totalChildrenAccepted.hashCode());
        result = prime * result + ((this.totalInfantsAccepted == null) ? 0 : this.totalInfantsAccepted.hashCode());
        result = prime * result + ((this.childWeightConstant == null) ? 0 : this.childWeightConstant.hashCode());
        result = prime * result + ((this.numOfChildren == null) ? 0 : this.numOfChildren.hashCode());
        result = prime * result + ((this.numOfInfants == null) ? 0 : this.numOfInfants.hashCode());
        result = prime * result + ((this.numOfSportsPersons == null) ? 0 : this.numOfSportsPersons.hashCode());
        result = prime * result + ((this.numOfSubloadStaff == null) ? 0 : this.numOfSubloadStaff.hashCode());
        result = prime * result + ((this.sprtsPersnWeightCnstnt == null) ? 0 : this.sprtsPersnWeightCnstnt.hashCode());
        result = prime * result + ((this.totalBaggagePieces == null) ? 0 : this.totalBaggagePieces.hashCode());
        result = prime * result + ((this.totalBaggageWeight == null) ? 0 : this.totalBaggageWeight.hashCode());
        result = prime * result + ((this.numOfLevel_7Pax == null) ? 0 : this.numOfLevel_7Pax.hashCode());
        result = prime * result + ((this.numOfLevel_7aPax == null) ? 0 : this.numOfLevel_7aPax.hashCode());
        result = prime * result + ((this.totalPaxFinalSales == null) ? 0 : this.totalPaxFinalSales.hashCode());
        result = prime * result + ((this.departAirportIata == null) ? 0 : this.departAirportIata.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Cabin (");

        sb.append(flightIdComposite);
        sb.append(", ").append(airlineCode);
        sb.append(", ").append(flightNumber);
        sb.append(", ").append(flightOriginDate);
        sb.append(", ").append(dcsFlightVersionNum);
        sb.append(", ").append(classCharacter);
        sb.append(", ").append(legSeqNum);
        sb.append(", ").append(seatsConfiguration);
        sb.append(", ").append(saleableSeatConfiguration);
        sb.append(", ").append(totalPassengersBooked);
        sb.append(", ").append(totalAdultsAccepted);
        sb.append(", ").append(totalSportspersonsAccepted);
        sb.append(", ").append(totalChildrenAccepted);
        sb.append(", ").append(totalInfantsAccepted);
        sb.append(", ").append(childWeightConstant);
        sb.append(", ").append(numOfChildren);
        sb.append(", ").append(numOfInfants);
        sb.append(", ").append(numOfSportsPersons);
        sb.append(", ").append(numOfSubloadStaff);
        sb.append(", ").append(sprtsPersnWeightCnstnt);
        sb.append(", ").append(totalBaggagePieces);
        sb.append(", ").append(totalBaggageWeight);
        sb.append(", ").append(numOfLevel_7Pax);
        sb.append(", ").append(numOfLevel_7aPax);
        sb.append(", ").append(totalPaxFinalSales);
        sb.append(", ").append(departAirportIata);

        sb.append(")");
        return sb.toString();
    }
}
