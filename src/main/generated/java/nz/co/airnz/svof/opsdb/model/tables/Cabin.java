/*
 * This file is generated by jOOQ.
*/
package nz.co.airnz.svof.opsdb.model.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import nz.co.airnz.svof.opsdb.model.Keys;
import nz.co.airnz.svof.opsdb.model.Ops;
import nz.co.airnz.svof.opsdb.model.tables.records.CabinRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Cabin extends TableImpl<CabinRecord> {

    private static final long serialVersionUID = -967980327;

    /**
     * The reference instance of <code>ops.cabin</code>
     */
    public static final Cabin CABIN = new Cabin();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CabinRecord> getRecordType() {
        return CabinRecord.class;
    }

    /**
     * The column <code>ops.cabin.leg_no</code>.
     */
    public final TableField<CabinRecord, Integer> LEG_NO = createField("leg_no", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>ops.cabin.update_key</code>.
     */
    public final TableField<CabinRecord, Integer> UPDATE_KEY = createField("update_key", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>ops.cabin.seat_class</code>.
     */
    public final TableField<CabinRecord, String> SEAT_CLASS = createField("seat_class", org.jooq.impl.SQLDataType.VARCHAR.length(1).nullable(false), this, "");

    /**
     * The column <code>ops.cabin.seats_per_class</code>.
     */
    public final TableField<CabinRecord, Integer> SEATS_PER_CLASS = createField("seats_per_class", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>ops.cabin</code> table reference
     */
    public Cabin() {
        this("cabin", null);
    }

    /**
     * Create an aliased <code>ops.cabin</code> table reference
     */
    public Cabin(String alias) {
        this(alias, CABIN);
    }

    private Cabin(String alias, Table<CabinRecord> aliased) {
        this(alias, aliased, null);
    }

    private Cabin(String alias, Table<CabinRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Ops.OPS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CabinRecord> getPrimaryKey() {
        return Keys.PK_CABIN_CONFIGURATION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CabinRecord>> getKeys() {
        return Arrays.<UniqueKey<CabinRecord>>asList(Keys.PK_CABIN_CONFIGURATION);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<CabinRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<CabinRecord, ?>>asList(Keys.CABIN__FK_OPS_CABIN_OPS_LEG);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Cabin as(String alias) {
        return new Cabin(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Cabin rename(String name) {
        return new Cabin(name, null);
    }
}
