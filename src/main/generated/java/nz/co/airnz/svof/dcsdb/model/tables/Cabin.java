/*
 * This file is generated by jOOQ.
*/
package nz.co.airnz.svof.dcsdb.model.tables;


import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import nz.co.airnz.svof.dcsdb.model.Dcs;
import nz.co.airnz.svof.dcsdb.model.Keys;
import nz.co.airnz.svof.dcsdb.model.tables.records.CabinRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Cabin extends TableImpl<CabinRecord> {

    private static final long serialVersionUID = 1941255214;

    /**
     * The reference instance of <code>dcs.cabin</code>
     */
    public static final Cabin CABIN = new Cabin();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CabinRecord> getRecordType() {
        return CabinRecord.class;
    }

    /**
     * The column <code>dcs.cabin.flight_id_composite</code>.
     */
    public final TableField<CabinRecord, String> FLIGHT_ID_COMPOSITE = createField("flight_id_composite", org.jooq.impl.SQLDataType.VARCHAR.length(21).nullable(false), this, "");

    /**
     * The column <code>dcs.cabin.airline_code</code>.
     */
    public final TableField<CabinRecord, String> AIRLINE_CODE = createField("airline_code", org.jooq.impl.SQLDataType.VARCHAR.length(3), this, "");

    /**
     * The column <code>dcs.cabin.flight_number</code>.
     */
    public final TableField<CabinRecord, String> FLIGHT_NUMBER = createField("flight_number", org.jooq.impl.SQLDataType.VARCHAR.length(4), this, "");

    /**
     * The column <code>dcs.cabin.flight_origin_date</code>.
     */
    public final TableField<CabinRecord, Date> FLIGHT_ORIGIN_DATE = createField("flight_origin_date", org.jooq.impl.SQLDataType.DATE, this, "");

    /**
     * The column <code>dcs.cabin.dcs_flight_version_num</code>.
     */
    public final TableField<CabinRecord, Integer> DCS_FLIGHT_VERSION_NUM = createField("dcs_flight_version_num", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>dcs.cabin.class_character</code>.
     */
    public final TableField<CabinRecord, String> CLASS_CHARACTER = createField("class_character", org.jooq.impl.SQLDataType.VARCHAR.length(1).nullable(false), this, "");

    /**
     * The column <code>dcs.cabin.leg_seq_num</code>.
     */
    public final TableField<CabinRecord, Integer> LEG_SEQ_NUM = createField("leg_seq_num", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>dcs.cabin.seats_configuration</code>. Scheduled/Planned number of seats in a class
     */
    public final TableField<CabinRecord, Integer> SEATS_CONFIGURATION = createField("seats_configuration", org.jooq.impl.SQLDataType.INTEGER, this, "Scheduled/Planned number of seats in a class");

    /**
     * The column <code>dcs.cabin.saleable_seat_configuration</code>. Scheduled/Planned number of seats in a class
     */
    public final TableField<CabinRecord, Integer> SALEABLE_SEAT_CONFIGURATION = createField("saleable_seat_configuration", org.jooq.impl.SQLDataType.INTEGER, this, "Scheduled/Planned number of seats in a class");

    /**
     * The column <code>dcs.cabin.total_passengers_booked</code>. Total number of Passengers booked in a class.
     */
    public final TableField<CabinRecord, Integer> TOTAL_PASSENGERS_BOOKED = createField("total_passengers_booked", org.jooq.impl.SQLDataType.INTEGER, this, "Total number of Passengers booked in a class.");

    /**
     * The column <code>dcs.cabin.total_adults_accepted</code>. Total number of Adults accepted in a class.
     */
    public final TableField<CabinRecord, Integer> TOTAL_ADULTS_ACCEPTED = createField("total_adults_accepted", org.jooq.impl.SQLDataType.INTEGER, this, "Total number of Adults accepted in a class.");

    /**
     * The column <code>dcs.cabin.total_sportspersons_accepted</code>. Total number of Sportspersons accepted in a class.
     */
    public final TableField<CabinRecord, Integer> TOTAL_SPORTSPERSONS_ACCEPTED = createField("total_sportspersons_accepted", org.jooq.impl.SQLDataType.INTEGER, this, "Total number of Sportspersons accepted in a class.");

    /**
     * The column <code>dcs.cabin.total_children_accepted</code>. Total number of Children accepted in a class.
     */
    public final TableField<CabinRecord, Integer> TOTAL_CHILDREN_ACCEPTED = createField("total_children_accepted", org.jooq.impl.SQLDataType.INTEGER, this, "Total number of Children accepted in a class.");

    /**
     * The column <code>dcs.cabin.total_infants_accepted</code>. Total number of Infants accepted in a class
     */
    public final TableField<CabinRecord, Integer> TOTAL_INFANTS_ACCEPTED = createField("total_infants_accepted", org.jooq.impl.SQLDataType.INTEGER, this, "Total number of Infants accepted in a class");

    /**
     * The column <code>dcs.cabin.child_weight_constant</code>. Child's Weight Constant for a given Class, used for Weight &amp; Balance of an aircraft.
     */
    public final TableField<CabinRecord, Integer> CHILD_WEIGHT_CONSTANT = createField("child_weight_constant", org.jooq.impl.SQLDataType.INTEGER, this, "Child's Weight Constant for a given Class, used for Weight & Balance of an aircraft.");

    /**
     * The column <code>dcs.cabin.num_of_children</code>. Total number of Children accepted in a given class.
     */
    public final TableField<CabinRecord, Integer> NUM_OF_CHILDREN = createField("num_of_children", org.jooq.impl.SQLDataType.INTEGER, this, "Total number of Children accepted in a given class.");

    /**
     * The column <code>dcs.cabin.num_of_infants</code>. Total number of Infants accepted in  a given class.
     */
    public final TableField<CabinRecord, Integer> NUM_OF_INFANTS = createField("num_of_infants", org.jooq.impl.SQLDataType.INTEGER, this, "Total number of Infants accepted in  a given class.");

    /**
     * The column <code>dcs.cabin.num_of_sports_persons</code>. Total number of Sportspersons accepted in  a given class.
     */
    public final TableField<CabinRecord, Integer> NUM_OF_SPORTS_PERSONS = createField("num_of_sports_persons", org.jooq.impl.SQLDataType.INTEGER, this, "Total number of Sportspersons accepted in  a given class.");

    /**
     * The column <code>dcs.cabin.num_of_subload_staff</code>. Total number of Subload Staffs accepted in  a given class.
     */
    public final TableField<CabinRecord, Integer> NUM_OF_SUBLOAD_STAFF = createField("num_of_subload_staff", org.jooq.impl.SQLDataType.INTEGER, this, "Total number of Subload Staffs accepted in  a given class.");

    /**
     * The column <code>dcs.cabin.sprts_persn_weight_cnstnt</code>. Sportsperson's Weight Constant for  a given Class, used for Weight &amp; Balance of an aircraft.
     */
    public final TableField<CabinRecord, Integer> SPRTS_PERSN_WEIGHT_CNSTNT = createField("sprts_persn_weight_cnstnt", org.jooq.impl.SQLDataType.INTEGER, this, "Sportsperson's Weight Constant for  a given Class, used for Weight & Balance of an aircraft.");

    /**
     * The column <code>dcs.cabin.total_baggage_pieces</code>. Total number of baggage loaded by pieces in  a given class.
     */
    public final TableField<CabinRecord, Integer> TOTAL_BAGGAGE_PIECES = createField("total_baggage_pieces", org.jooq.impl.SQLDataType.INTEGER, this, "Total number of baggage loaded by pieces in  a given class.");

    /**
     * The column <code>dcs.cabin.total_baggage_weight</code>. Total number of baggage loaded by weight in  a given class.
     */
    public final TableField<CabinRecord, Integer> TOTAL_BAGGAGE_WEIGHT = createField("total_baggage_weight", org.jooq.impl.SQLDataType.INTEGER, this, "Total number of baggage loaded by weight in  a given class.");

    /**
     * The column <code>dcs.cabin.num_of_level_7_pax</code>. The maximum number of subload staff that may be accepted to each destination without exceeding the payload for a given class.
     */
    public final TableField<CabinRecord, Integer> NUM_OF_LEVEL_7_PAX = createField("num_of_level_7_pax", org.jooq.impl.SQLDataType.INTEGER, this, "The maximum number of subload staff that may be accepted to each destination without exceeding the payload for a given class.");

    /**
     * The column <code>dcs.cabin.num_of_level_7a_pax</code>. The number of subload passengers who have been accepted and seated from ALL stations to each destination for a given class.
     */
    public final TableField<CabinRecord, Integer> NUM_OF_LEVEL_7A_PAX = createField("num_of_level_7a_pax", org.jooq.impl.SQLDataType.INTEGER, this, "The number of subload passengers who have been accepted and seated from ALL stations to each destination for a given class.");

    /**
     * The column <code>dcs.cabin.total_pax_final_sales</code>. Final passenger counts accepted into a given class of an aircraft at the departure station.
     */
    public final TableField<CabinRecord, Integer> TOTAL_PAX_FINAL_SALES = createField("total_pax_final_sales", org.jooq.impl.SQLDataType.INTEGER, this, "Final passenger counts accepted into a given class of an aircraft at the departure station.");

    /**
     * The column <code>dcs.cabin.depart_airport_iata</code>.
     */
    public final TableField<CabinRecord, String> DEPART_AIRPORT_IATA = createField("depart_airport_iata", org.jooq.impl.SQLDataType.VARCHAR.length(3), this, "");

    /**
     * Create a <code>dcs.cabin</code> table reference
     */
    public Cabin() {
        this("cabin", null);
    }

    /**
     * Create an aliased <code>dcs.cabin</code> table reference
     */
    public Cabin(String alias) {
        this(alias, CABIN);
    }

    private Cabin(String alias, Table<CabinRecord> aliased) {
        this(alias, aliased, null);
    }

    private Cabin(String alias, Table<CabinRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dcs.DCS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CabinRecord> getPrimaryKey() {
        return Keys.PK_CABIN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CabinRecord>> getKeys() {
        return Arrays.<UniqueKey<CabinRecord>>asList(Keys.PK_CABIN, Keys.BK_CABIN);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<CabinRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<CabinRecord, ?>>asList(Keys.CABIN__FK_CABIN_LEG);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Cabin as(String alias) {
        return new Cabin(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Cabin rename(String name) {
        return new Cabin(name, null);
    }
}
