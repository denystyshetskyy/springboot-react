/*
 * This file is generated by jOOQ.
*/
package nz.co.airnz.svof.opsdb.model.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import nz.co.airnz.svof.opsdb.model.Keys;
import nz.co.airnz.svof.opsdb.model.Ops;
import nz.co.airnz.svof.opsdb.model.tables.records.DelayRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Delay extends TableImpl<DelayRecord> {

    private static final long serialVersionUID = -28458847;

    /**
     * The reference instance of <code>ops.delay</code>
     */
    public static final Delay DELAY = new Delay();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DelayRecord> getRecordType() {
        return DelayRecord.class;
    }

    /**
     * The column <code>ops.delay.leg_no</code>.
     */
    public final TableField<DelayRecord, Integer> LEG_NO = createField("leg_no", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>ops.delay.update_key</code>.
     */
    public final TableField<DelayRecord, Integer> UPDATE_KEY = createField("update_key", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>ops.delay.delay_sequence_number</code>. This sequence number reflects the sequence number of the delay code as provided in the Business Event Message published by Ops++ and will need to be generated by the ODS insert module. This sequence_number is used, in conjunction with the internal Ops++ primary keys of Leg No and Update Key, to create a primary key for all the Delay Codes provided in a message, given that there is currently no consistency in the supply of the Delay Code or the Sub Delay code.  The issue of which authoritative source table should be used for decoding these codes will be resolved at the time the code is decoded when inserted into the SVOF  
     */
    public final TableField<DelayRecord, Integer> DELAY_SEQUENCE_NUMBER = createField("delay_sequence_number", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "This sequence number reflects the sequence number of the delay code as provided in the Business Event Message published by Ops++ and will need to be generated by the ODS insert module. This sequence_number is used, in conjunction with the internal Ops++ primary keys of Leg No and Update Key, to create a primary key for all the Delay Codes provided in a message, given that there is currently no consistency in the supply of the Delay Code or the Sub Delay code.  The issue of which authoritative source table should be used for decoding these codes will be resolved at the time the code is decoded when inserted into the SVOF  ");

    /**
     * The column <code>ops.delay.delay_code</code>.
     */
    public final TableField<DelayRecord, String> DELAY_CODE = createField("delay_code", org.jooq.impl.SQLDataType.VARCHAR.length(2).nullable(false), this, "");

    /**
     * The column <code>ops.delay.sub_delay_code</code>.
     */
    public final TableField<DelayRecord, String> SUB_DELAY_CODE = createField("sub_delay_code", org.jooq.impl.SQLDataType.VARCHAR.length(3), this, "");

    /**
     * The column <code>ops.delay.delay_time</code>.
     */
    public final TableField<DelayRecord, Integer> DELAY_TIME = createField("delay_time", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>ops.delay.delay_imputation</code>.
     */
    public final TableField<DelayRecord, String> DELAY_IMPUTATION = createField("delay_imputation", org.jooq.impl.SQLDataType.VARCHAR.length(5), this, "");

    /**
     * The column <code>ops.delay.delay_reason</code>.
     */
    public final TableField<DelayRecord, String> DELAY_REASON = createField("delay_reason", org.jooq.impl.SQLDataType.VARCHAR.length(5), this, "");

    /**
     * Create a <code>ops.delay</code> table reference
     */
    public Delay() {
        this("delay", null);
    }

    /**
     * Create an aliased <code>ops.delay</code> table reference
     */
    public Delay(String alias) {
        this(alias, DELAY);
    }

    private Delay(String alias, Table<DelayRecord> aliased) {
        this(alias, aliased, null);
    }

    private Delay(String alias, Table<DelayRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Ops.OPS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<DelayRecord> getPrimaryKey() {
        return Keys.PK_DELAY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<DelayRecord>> getKeys() {
        return Arrays.<UniqueKey<DelayRecord>>asList(Keys.PK_DELAY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<DelayRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<DelayRecord, ?>>asList(Keys.DELAY__FK_OPS_DELAY_OPS_LEG);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Delay as(String alias) {
        return new Delay(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Delay rename(String name) {
        return new Delay(name, null);
    }
}
